Wzorzec Dekorator jest przydatny w sytuacjach gdy:

-Chcemy uniknąć tworzenia dużej liczby pochodnych klas
-Chcemy dodawać lub usuwać funkcjonalności obiektów dynamicznie w czasie działania
programu, bez konieczności modyfikowania oryginalnego kodu
-Potrzebujemy elastycznej struktury do łączenia różnych funkcjonalności w różnych konfiguracjach,
aby łatwo dostosować zachowanie obiektów do zmieniających się wymagań
-Chcemy uniknąć tworzenia zagnieżdżonych klas dziedziczących, co może prowadzić do
skomplikowanego hierarchicznego modelu dziedziczenia